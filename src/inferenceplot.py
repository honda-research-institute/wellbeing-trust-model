import matplotlib
import matplotlib.pyplot  as plt
import numpy as np

tex_fonts = {
# Use LaTeX to write all text
#     "text.usetex": True,
#     "font.family": "Times New Roman",
# Use 15pt font in plots, to match 16pt font in document
    "axes.labelsize": 34,
    "font.size": 34,
# Make the legend/label fonts a little smaller
    "legend.fontsize": 36,
    "xtick.labelsize": 36,
    "ytick.labelsize": 32
}

matplotlib.rcParams['pdf.fonttype'] = 42
matplotlib.rcParams['ps.fonttype'] = 42
plt.rcParams.update(tex_fonts)
#both0 a = 0 , al= 0
t1 = [0.614240230011639, 0.4929982643218722, 0.4169824856251244, 0.37758852399322707, 0.35701606234448047, 0.3462065159692914, 0.3404847372232679, 0.337427165483,
      0.3357744967825989, 0.3348698782684856, 0.33436836589173513]
w1 = [0.5932311413935364, 0.5352787511256242, 0.49619519873648543, 0.47629915945705514, 0.4660117645760866, 0.46064645826920503, 0.45782638272404164, 0.456330233179107,
      0.455527371600573, 0.4550909059425954, 0.4548503782808191]
ow1 = [0.5669378667342743, 0.49379221663622413, 0.4485511214556563, 0.43026341379226385, 0.4230412831002494, 0.42025129889837815, 0.4191968420411494,
       0.4188096685139356, 0.4186736142235569, 0.41862928723093684, 0.4186169398070904]
#both1 a = 1, al = 1
t2 = [0.614240230011639, 0.7143976046191889, 0.7649793442006914, 0.7975998948248891, 0.817541143611032, 0.8292071655454119, 0.8357370718896424, 0.8392048530197822,
0.8409165472082638, 0.8416643348230926, 0.8419121961473165]
w2 = [0.5932311413935364, 0.6501252343356233, 0.6792230939769975, 0.6992995346693287, 0.7122481635954554, 0.7201994949340684, 0.7248857216022262, 0.7275360425864571,
0.7289642823633948, 0.7296853830489924, 0.730013694066431]
ow2 = [0.5669378667342744, 0.638719663274635, 0.6665663109825825, 0.682733494221473, 0.6921895443842754, 0.6977550421377802, 0.7010423316073296, 0.7029880533195596,
0.7041412330902531, 0.7048252876439975, 0.7052312989281019]

#al = 1 a = 0
t3 = [0.6142402300116391, 0.6889885766688912, 0.714445075011235, 0.7282050149035866, 0.7354756080354179, 0.7391571643261682, 0.7408859868827473, 0.7415827725127897,
0.7417591235820176, 0.7416933342914711, 0.7415319898727459]
w3 = [0.5932311413935364, 0.6501252343356234, 0.669337321317865, 0.6799067384199772, 0.6857203805065009, 0.6888545954730194, 0.6904847036451455, 0.6912833101822244,
0.6916338460145377, 0.6917522316765435, 0.6917577169429772]
ow3 = [0.5669378667342744, 0.493792216636224, 0.4485511214556563, 0.4302634137922638, 0.4230412831002494, 0.42025129889837803, 0.4191968420411494, 0.4188096685139354,
0.4186736142235568, 0.4186292872309369, 0.4186169398070904]

#al = 0, a = 1
t4 = [0.614240230011639, 0.5993933552238218, 0.5790420243455641, 0.5662727424557185, 0.5584836455867237, 0.5537154364825718, 0.550783933058612, 0.5489715619790443,
0.5478443456087206, 0.5471390597398187, 0.5466952471960669]
w4 = [0.5932311413935363, 0.5352787511256242, 0.5237929838411781, 0.5179727821220141, 0.5143131026362421, 0.5120747433058103, 0.5107054015338632, 0.5098656552697753,
0.5093483713587814, 0.5090279812972306, 0.5088283826051522]
ow4 = [0.5669378667342743, 0.638719663274635, 0.6665663109825825, 0.682733494221473, 0.6921895443842755, 0.6977550421377803, 0.7010423316073298, 0.7029880533195597,
0.7041412330902531, 0.7048252876439977, 0.7052312989281019]


#bn2T
#oa_21
# t1 = [0.6476946447221685, 0.6640454225056212, 0.6723533051960155, 0.6767143581287967, 0.6791275661367611, 0.6805435093742505, 0.6814216819254697, 0.6819923188761863,
# 0.6823765804767673, 0.6826419912313295]
# w1 = [0.5768945824471475, 0.6439511053252467, 0.6523927980528503, 0.6570882387295471, 0.6595904779711111, 0.6609663418111574, 0.6617635321313926, 0.6622515311180115,
# 0.6625651190292124, 0.6627745009439785]
# ow1 = [0.5943596950574914, 0.6097531889168286, 0.6179180528991234, 0.6222635694309935, 0.6245904327755052, 0.6258436427598952, 0.6265218428403796, 0.6268902645954744,
# 0.6270910145045151, 0.6272006738111018]
# # oa_20
# t2 = [0.6476946447221685, 0.6640454225056212, 0.6723533051960155, 0.6767143581287967, 0.6791275661367611, 0.6805435093742505, 0.6814216819254697, 0.6819923188761863,
# 0.6823765804767673, 0.6826419912313295]
# w2 = [0.5768945824471475, 0.5135172731007596, 0.5179385869562528, 0.5207203984828654, 0.5223345129079338, 0.5232990928437897, 0.5239042976299548, 0.5243012323989288,
# 0.5245705339598379, 0.5247576054229797]
# ow2 = [0.5943596950574914, 0.6097531889168286, 0.6179180528991234, 0.6222635694309935, 0.6245904327755052, 0.6258436427598952, 0.6265218428403796, 0.6268902645954744,
# 0.6270910145045151, 0.6272006738111018]


#alternative all 1
# t1 = [0.6142402300116391, 0.7143976046191889, 0.7101842712729429, 0.7587525418578254, 0.742644977080557, 0.7805104407442811, 0.7588567775178077, 0.7914247130182304,
# 0.767053797420076, 0.7969368510336216, 0.7712096490371579]
# w1 = [0.5932311413935364, 0.6501252343356235, 0.6780649505835414, 0.6761390273928397, 0.695173745600974, 0.688897803755323, 0.7037026458303628, 0.6953202360058091,
# 0.7080097989587968, 0.698576322093116, 0.7101918697457981]
# ow1 = [0.5669378667342744, 0.638719663274635, 0.6338031211810635, 0.6615773409143183, 0.6462184201020537, 0.6682894606737341, 0.6498514848999061, 0.6702321095617255,
# 0.6509030549927688, 0.670792947188451, 0.651206832005813]
#
# # alternative all 0
# t2 = [0.6142402300116391, 0.4929982643218722, 0.5705553959317887, 0.4533106211986163, 0.5472677522932864, 0.43951119887983225, 0.5388611411951628, 0.43434335354272124,
# 0.5356508462199487, 0.4323317713979102, 0.5343888957230455]
# w2 = [0.5932311413935364, 0.5352787511256242, 0.47922899273908626, 0.515316979033659, 0.46887670579125207, 0.5083998190909634, 0.46500451344976035, 0.5058146518782097,
# 0.4635000169036839, 0.5048096780716399, 0.46290429947653045]
# ow2 = [0.5669378667342744, 0.493792216636224, 0.5555048955757612, 0.48046425208577626, 0.5488128738790756, 0.47828944819749, 0.5477224470202224, 0.4779411834143882,
# 0.5475482773568202, 0.4778878797600149, 0.5475217666452641]

### this plot is when we have only two conditions for inference for example w and ow only have two condition since they have only one evidence. For w we have two
# conditions of al and for ow we have two conditions for a. each of y1-y2 is the variable (e.g. w) array for each condition
def plotinf(y1, y2, label1, label2, ylabel, name):
    x = np.array(range(0, 11))

    fig, ax = plt.subplots(1, 1, figsize=(16, 5), dpi=300)
    # plot both arrays on the same graph with legends
    plt.plot(x, y1, label=label1)
    plt.plot(x, y2, label=label2)

    # add labels to the axes
    plt.xlabel('Time step')
    plt.ylabel(ylabel)

    # add title to the graph
    # plt.title('Two Arrays with Two Legends')

    # add legend to the graph
    plt.legend()
    plt.grid(linestyle = '--', linewidth = 0.2)
    # show the graph
    plt.savefig(name + ".pdf", format="pdf", bbox_inches='tight')
    plt.show()

### this plot is when we have four conditions for inference for example for trust we have both al and a as evidence so we have 4 conditions. Each of y1-y4 is the
# variable (e.g. trust) array for each condition
def plotinf4(y1, y2, y3, y4, label1, label2, label3, label4, ylabel, name):
    x = np.array(range(0, 11))

    fig, ax = plt.subplots(1, 1, figsize=(16, 5), dpi=300)
    # plot both arrays on the same graph with legends
    plt.plot(x, y1, label=label1)
    plt.plot(x, y2, label=label2)
    plt.plot(x, y3, label=label3)
    plt.plot(x, y4, label=label4)

    # add labels to the axes
    plt.xlabel('Time step')
    plt.ylabel(ylabel)

    # add title to the graph
    # plt.title('Two Arrays with Two Legends')

    # add legend to the graph
    # bbox_to_anchor = (.22, 1.05),
    plt.legend(loc='upper right', borderaxespad=0.01)
    plt.grid(linestyle = '--', linewidth = 0.2)
    # show the graph
    plt.savefig(name + ".pdf", format="pdf", bbox_inches='tight')
    plt.show()



#####using the defined functions to plot the inferred variables given different evidence.
plotinf(w1, w2, 'al = $Al_0$', 'al = $Al_1$', 'Wellbeing $w_k$','winf')
# plotinf(t1, t2, 'a = unyielding, al = not aligned', 'a = yielding, al = aligned', 'Trust $t_k$')
plotinf(ow1, ow2, 'a = $E_u$', 'a = $E_y$', 'Other\'s Wellbeing \n $w^o_k$','owinf')


plotinf4(t1, t2, t3, t4, 'a = $E_u$, al = $Al_0$', 'a = $E_y$, al = $Al_1$', 'a = $E_u$, al = $Al_1$', 'a = $E_y$, al = $Al_0$',
         'Trust $t_k$','tinf')



# plotinf(w1, w2, 'other\'s yielding', 'other\'s unyielding', 'Wellbeing $w_k$')
# plotinf(t1, t2, 'other\'s yielding', 'other\'s unyielding', 'Trust $t_k$')
# plotinf(ow1, ow2, 'other\'s yielding', 'other\'s unyielding', 'Other\'s Wellbeing $w^o_k$')